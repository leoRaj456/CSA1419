#include <stdio.h>
#include <ctype.h>
#include <string.h>

#define MAX_ID_LEN 31

int isOperator(char ch) {
    return strchr("+-*/=<>!", ch) != NULL;
}

void skipWhitespace(FILE *fp) {
    int ch;
    while (isspace(ch = fgetc(fp)));
    if (ch != EOF) ungetc(ch, fp);
}

void skipComments(FILE *fp) {
    int ch = fgetc(fp);
    if (ch == '/') while ((ch = fgetc(fp)) != '\n' && ch != EOF);
    else if (ch == '*') {
        int prev = 0;
        while ((ch = fgetc(fp)) != EOF)
            if (prev == '*' && ch == '/') break;
            else prev = ch;
    } else {
        ungetc(ch, fp); printf("Operator: /\n");
    }
}

int main() {
    FILE *fp = fopen("example.c", "r");
    char ch, buffer[100]; int i;

    while ((ch = fgetc(fp)) != EOF) {
        if (isspace(ch)) { skipWhitespace(fp); continue; }

        if (ch == '/') {
            char next = fgetc(fp);
            if (next == '/' || next == '*') {
                ungetc(next, fp); skipComments(fp); continue;
            } else { ungetc(next, fp); printf("Operator: /\n"); continue; }
        }

        if (isalpha(ch) || ch == '_') {
            i = 0; buffer[i++] = ch;
            while (isalnum(ch = fgetc(fp)) || ch == '_')
                if (i < MAX_ID_LEN) buffer[i++] = ch;
            buffer[i] = '\0'; ungetc(ch, fp);
            printf("Identifier: %s\n", buffer);
        }

        else if (isdigit(ch)) {
            i = 0; buffer[i++] = ch;
            while (isdigit(ch = fgetc(fp))) buffer[i++] = ch;
            buffer[i] = '\0'; ungetc(ch, fp);
            printf("Constant: %s\n", buffer);
        }

        else if (isOperator(ch)) {
            char next = fgetc(fp);
            if (next == '=') printf("Operator: %c%c\n", ch, next);
            else { printf("Operator: %c\n", ch); ungetc(next, fp); }
        }

        else printf("Symbol: %c\n", ch);
    }

    fclose(fp);
    return 0;
}
