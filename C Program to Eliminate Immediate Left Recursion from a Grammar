#include <stdio.h>
#include <string.h>

int main() {
    char nt, productions[100], alpha[10][20], beta[10][20];
    int i, j, k = 0, l = 0;
    
    printf("Enter the non-terminal (e.g. A): ");
    scanf(" %c", &nt);
    printf("Enter the production rules for %c (use | to separate):\n", nt);
    scanf(" %[^\n]", productions); // read the entire line including spaces
    
    char *prod[10];
    int count = 0;
    prod[count] = strtok(productions, "|");
    while (prod[count] != NULL) {
        count++;
        prod[count] = strtok(NULL, "|");
    }
    
    for (i = 0; i < count; i++) {
        if (prod[i][0] == nt) {
            // Left recursive: Aα
            strcpy(alpha[k], prod[i] + 1); // copy string after nt
            k++;
        } else {
            // Non-left recursive: β
            strcpy(beta[l], prod[i]);
            l++;
        }
    }
    
    if (k == 0) {
        printf("No left recursion found in the productions.\n");
        return 0;
    }
    
    printf("\nAfter eliminating left recursion:\n");
    printf("%c -> ", nt);
    for (i = 0; i < l; i++) {
        printf("%s%c'", beta[i], nt);
        if (i != l - 1) printf(" | ");
    }
    printf("\n");
    
    printf("%c' -> ", nt);
    for (i = 0; i < k; i++) {
        printf("%s%c'", alpha[i], nt);
        if (i != k - 1) printf(" | ");
    }
    printf(" | ε\n");
    
    return 0;
}
